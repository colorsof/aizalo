# COMPREHENSIVE DATA ARCHITECTURE
# AI Marketing & Sales Automation Platform
# This document ties together all platform components and design decisions

[PLATFORM_OVERVIEW]
name = "AI Business Platform - Customer Acquisition Machine"
vision = "We don't just answer questions - we FIND customers, NURTURE them, and CLOSE sales while you sleep"
core_value = "Complete customer acquisition machine, not just a chatbot"
target_market = "Kenyan SMEs starting with Nairobi"
tech_stack = "Next.js, TypeScript, Tailwind, Supabase, Vercel"
ai_stack = "Gemini 1.5 Flash (95%), Groq Llama 3 (5%), OpenAI GPT-3.5 (backup)"

[CORE_PLATFORM_LAYERS]
customer_acquisition = "Local SEO, Social Media, Google Ads, Review Management"
engagement = "WhatsApp, Facebook, Instagram, TikTok, Email, Web Chat"
ai_sales = "Price negotiation, Lead qualification, Content generation, Campaign optimization"
automation = "Workflow builder, A/B testing, Analytics, Follow-ups"
retention = "Loyalty programs, Reorder reminders, Birthday campaigns, Referrals"

[DATA_ENTITIES]

[tenants]
; Multi-tenant architecture - each business is a tenant
id = "UUID PRIMARY KEY"
name = "Business name"
subdomain = "Unique subdomain for tenant"
industry_type = "hotels|real_estate|car_dealers|beauty|medical|tech|law|hardware"
tier = "1|2|3 - Digital readiness tier"
onboarding_status = "ENUM: pending|active|churned"
settings = "JSONB - All tenant-specific configurations"
pricing_plan = "starter|professional|growth"
monthly_fee = "2500|3500|5000"
created_at = "TIMESTAMP"
trial_ends_at = "TIMESTAMP"
subscription_status = "trialing|active|past_due|canceled"

[customers]
; End customers of our tenants
id = "UUID PRIMARY KEY"
tenant_id = "UUID REFERENCES tenants(id)"
phone = "Primary identifier in Kenya"
email = "Optional"
name = "Customer name"
language_preference = "en|sw|sheng"
location = "GPS or area name"
tags = "JSONB - Customer segments"
lifetime_value = "DECIMAL - Total spent"
acquisition_channel = "whatsapp|facebook|instagram|tiktok|google|referral"
acquisition_campaign = "Reference to campaign that acquired them"
created_at = "TIMESTAMP"
last_active_at = "TIMESTAMP"
metadata = "JSONB - Custom fields per industry"

[conversations]
; All customer interactions across channels
id = "UUID PRIMARY KEY"
tenant_id = "UUID REFERENCES tenants(id)"
customer_id = "UUID REFERENCES customers(id)"
channel = "whatsapp|facebook|instagram|tiktok|email|web"
status = "active|resolved|abandoned"
ai_model_used = "gemini|groq|openai"
response_times = "JSONB - Array of response times"
sentiment_score = "DECIMAL -1 to 1"
converted = "BOOLEAN - Led to sale"
conversion_value = "DECIMAL - Sale amount"
messages = "JSONB[] - Full conversation history"
metadata = "JSONB - Channel-specific data"
created_at = "TIMESTAMP"
resolved_at = "TIMESTAMP"

[messages]
; Individual messages for real-time processing
id = "UUID PRIMARY KEY"
conversation_id = "UUID REFERENCES conversations(id)"
tenant_id = "UUID REFERENCES tenants(id)"
direction = "inbound|outbound"
content = "TEXT - Message content"
media_urls = "JSONB - Array of media attachments"
ai_confidence = "DECIMAL 0-1"
processing_time_ms = "INTEGER"
tokens_used = "INTEGER"
created_at = "TIMESTAMP"

[campaigns]
; Marketing campaigns across all channels
id = "UUID PRIMARY KEY"
tenant_id = "UUID REFERENCES tenants(id)"
name = "Campaign name"
type = "acquisition|nurture|retention|reactivation"
channels = "JSONB - Array of channels"
target_audience = "JSONB - Segmentation criteria"
content = "JSONB - Channel-specific content"
ai_generated = "BOOLEAN"
status = "draft|scheduled|active|paused|completed"
budget = "DECIMAL - Optional ad spend"
schedule = "JSONB - Timing configuration"
metrics = "JSONB - Performance data"
created_at = "TIMESTAMP"
starts_at = "TIMESTAMP"
ends_at = "TIMESTAMP"

[leads]
; Lead tracking and scoring
id = "UUID PRIMARY KEY"
tenant_id = "UUID REFERENCES tenants(id)"
customer_id = "UUID REFERENCES customers(id)"
source_campaign_id = "UUID REFERENCES campaigns(id)"
score = "INTEGER 0-100"
stage = "new|contacted|qualified|negotiating|won|lost"
value = "DECIMAL - Potential deal value"
probability = "DECIMAL 0-1"
assigned_to = "TEXT - Staff member if applicable"
follow_up_at = "TIMESTAMP"
notes = "JSONB - AI and manual notes"
created_at = "TIMESTAMP"
converted_at = "TIMESTAMP"

[content_library]
; AI-generated and approved content
id = "UUID PRIMARY KEY"
tenant_id = "UUID REFERENCES tenants(id)"
type = "gmb_post|social_post|email|sms|ad_copy"
platform = "google|facebook|instagram|tiktok|whatsapp"
content = "TEXT"
media_urls = "JSONB"
performance_score = "DECIMAL - Based on engagement"
ai_model = "gemini|groq"
approved = "BOOLEAN"
used_count = "INTEGER"
created_at = "TIMESTAMP"
scheduled_for = "TIMESTAMP"
published_at = "TIMESTAMP"

[analytics_events]
; All platform events for analytics
id = "UUID PRIMARY KEY"
tenant_id = "UUID REFERENCES tenants(id)"
event_type = "lead_created|message_sent|conversion|campaign_launched"
entity_type = "customer|conversation|campaign|content"
entity_id = "UUID"
properties = "JSONB - Event-specific data"
created_at = "TIMESTAMP"

[integrations]
; Third-party integrations per tenant
id = "UUID PRIMARY KEY"
tenant_id = "UUID REFERENCES tenants(id)"
type = "whatsapp|facebook|google_my_business|google_ads|mpesa"
status = "connected|disconnected|error"
credentials = "JSONB - Encrypted"
webhook_url = "TEXT"
last_sync_at = "TIMESTAMP"
sync_errors = "JSONB"
created_at = "TIMESTAMP"

[notifications]
; System notifications and alerts
id = "UUID PRIMARY KEY"
tenant_id = "UUID REFERENCES tenants(id)"
type = "new_lead|missed_message|campaign_complete|low_balance"
title = "TEXT"
message = "TEXT"
priority = "low|medium|high|urgent"
read = "BOOLEAN DEFAULT false"
action_url = "TEXT"
created_at = "TIMESTAMP"

[ai_knowledge_base]
; Industry and tenant-specific knowledge
id = "UUID PRIMARY KEY"
tenant_id = "UUID REFERENCES tenants(id)"
category = "products|services|policies|pricing|faqs"
title = "TEXT"
content = "TEXT"
embeddings = "VECTOR(1536) - For semantic search"
metadata = "JSONB"
active = "BOOLEAN"
created_at = "TIMESTAMP"
updated_at = "TIMESTAMP"

[transactions]
; Financial transactions and haggling history
id = "UUID PRIMARY KEY"
tenant_id = "UUID REFERENCES tenants(id)"
customer_id = "UUID REFERENCES customers(id)"
conversation_id = "UUID REFERENCES conversations(id)"
type = "quote|negotiation|sale|payment"
initial_amount = "DECIMAL"
final_amount = "DECIMAL"
discount_percentage = "DECIMAL"
payment_method = "cash|mpesa|card|bank"
status = "pending|completed|failed"
metadata = "JSONB - Items, quantities, etc"
created_at = "TIMESTAMP"

[website_templates]
; Industry-specific website templates
id = "UUID PRIMARY KEY"
industry = "TEXT"
template_name = "TEXT"
preview_url = "TEXT"
features = "JSONB"
sections = "JSONB - Configurable sections"
color_schemes = "JSONB"
is_active = "BOOLEAN"
usage_count = "INTEGER"
created_at = "TIMESTAMP"

[tenant_websites]
; Generated websites for tenants
id = "UUID PRIMARY KEY"
tenant_id = "UUID REFERENCES tenants(id)"
template_id = "UUID REFERENCES website_templates(id)"
subdomain = "TEXT UNIQUE"
customizations = "JSONB - Colors, fonts, content"
sections = "JSONB - Enabled sections and content"
seo_metadata = "JSONB"
analytics_id = "TEXT"
is_published = "BOOLEAN"
created_at = "TIMESTAMP"
published_at = "TIMESTAMP"

[INDUSTRY_SPECIFIC_DATA]

[hotels_restaurants_data]
; Extended data for hotels and restaurants
tenant_id = "UUID REFERENCES tenants(id)"
room_types = "JSONB - Types, prices, availability"
menu_items = "JSONB - Categories, items, prices"
table_capacity = "INTEGER"
operating_hours = "JSONB"
special_events = "JSONB"
booking_rules = "JSONB"

[real_estate_data]
; Extended data for real estate
tenant_id = "UUID REFERENCES tenants(id)"
property_listings = "JSONB - Active properties"
viewing_slots = "JSONB - Available times"
commission_structure = "JSONB"
preferred_areas = "JSONB"
property_alerts = "JSONB - Customer preferences"

[car_dealership_data]
; Extended data for car dealerships
tenant_id = "UUID REFERENCES tenants(id)"
vehicle_inventory = "JSONB"
finance_partners = "JSONB"
trade_in_values = "JSONB"
test_drive_slots = "JSONB"
warranty_packages = "JSONB"

[beauty_salon_data]
; Extended data for beauty salons
tenant_id = "UUID REFERENCES tenants(id)"
service_menu = "JSONB"
stylist_profiles = "JSONB"
appointment_slots = "JSONB"
product_inventory = "JSONB"
loyalty_programs = "JSONB"

[medical_clinic_data]
; Extended data for medical clinics
tenant_id = "UUID REFERENCES tenants(id)"
doctor_profiles = "JSONB"
service_types = "JSONB"
appointment_types = "JSONB"
insurance_accepted = "JSONB"
emergency_protocols = "JSONB"

[hardware_store_data]
; Extended data for hardware stores
tenant_id = "UUID REFERENCES tenants(id)"
product_catalog = "JSONB"
bulk_pricing = "JSONB"
contractor_accounts = "JSONB"
delivery_zones = "JSONB"
credit_terms = "JSONB"

[AI_ORCHESTRATION]

[ai_routing_rules]
; How AI decides which model to use
id = "UUID PRIMARY KEY"
condition_type = "keyword|urgency|channel|time"
condition_value = "JSONB"
preferred_model = "gemini|groq|openai"
fallback_model = "TEXT"
priority = "INTEGER"

[ai_prompts]
; Reusable prompts for different scenarios
id = "UUID PRIMARY KEY"
tenant_id = "UUID REFERENCES tenants(id) NULL"
scenario = "price_negotiation|lead_qualification|content_creation"
prompt_template = "TEXT"
variables = "JSONB - Required variables"
success_examples = "JSONB"
model_preference = "gemini|groq|any"

[ai_usage_tracking]
; Track AI usage for optimization and billing
id = "UUID PRIMARY KEY"
tenant_id = "UUID REFERENCES tenants(id)"
model = "gemini|groq|openai"
tokens_used = "INTEGER"
cost_usd = "DECIMAL"
response_time_ms = "INTEGER"
success = "BOOLEAN"
error_message = "TEXT"
created_at = "TIMESTAMP"

[MARKETING_AUTOMATION]

[workflow_templates]
; Pre-built automation workflows
id = "UUID PRIMARY KEY"
industry = "TEXT"
name = "TEXT"
description = "TEXT"
trigger_type = "new_lead|abandoned_cart|time_based|behavior"
steps = "JSONB - Workflow definition"
expected_results = "JSONB"
is_active = "BOOLEAN"

[workflow_instances]
; Active workflows for tenants
id = "UUID PRIMARY KEY"
tenant_id = "UUID REFERENCES tenants(id)"
template_id = "UUID REFERENCES workflow_templates(id)"
status = "active|paused|completed"
current_step = "INTEGER"
execution_data = "JSONB"
metrics = "JSONB - Performance data"
created_at = "TIMESTAMP"
completed_at = "TIMESTAMP"

[ab_tests]
; A/B testing for optimization
id = "UUID PRIMARY KEY"
tenant_id = "UUID REFERENCES tenants(id)"
test_type = "message|timing|channel|offer"
variant_a = "JSONB"
variant_b = "JSONB"
traffic_split = "DECIMAL"
success_metric = "conversion|engagement|revenue"
results = "JSONB"
winner = "a|b|none"
status = "running|completed|aborted"
created_at = "TIMESTAMP"
completed_at = "TIMESTAMP"

[PERFORMANCE_METRICS]

[tenant_metrics]
; Aggregated metrics per tenant
tenant_id = "UUID REFERENCES tenants(id)"
period = "daily|weekly|monthly"
date = "DATE"
leads_generated = "INTEGER"
conversations_total = "INTEGER"
conversations_converted = "INTEGER"
revenue_generated = "DECIMAL"
ai_accuracy_score = "DECIMAL"
response_time_avg_ms = "INTEGER"
customer_satisfaction = "DECIMAL"
active_customers = "INTEGER"
campaigns_launched = "INTEGER"
content_pieces_created = "INTEGER"

[channel_performance]
; Performance by communication channel
tenant_id = "UUID REFERENCES tenants(id)"
channel = "TEXT"
date = "DATE"
messages_sent = "INTEGER"
messages_received = "INTEGER"
conversations_started = "INTEGER"
conversions = "INTEGER"
revenue = "DECIMAL"
cost = "DECIMAL"
roi = "DECIMAL"

[campaign_performance]
; Detailed campaign analytics
campaign_id = "UUID REFERENCES campaigns(id)"
date = "DATE"
impressions = "INTEGER"
clicks = "INTEGER"
conversations = "INTEGER"
conversions = "INTEGER"
revenue = "DECIMAL"
cost = "DECIMAL"
roi = "DECIMAL"

[KENYAN_MARKET_SPECIFIC]

[haggling_patterns]
; Learn from successful negotiations
tenant_id = "UUID REFERENCES tenants(id)"
product_category = "TEXT"
initial_price = "DECIMAL"
customer_offer = "DECIMAL"
final_price = "DECIMAL"
negotiation_rounds = "INTEGER"
success = "BOOLEAN"
customer_satisfaction = "DECIMAL"
patterns = "JSONB - Learned patterns"

[local_seo_data]
; Kenya-specific SEO optimization
tenant_id = "UUID REFERENCES tenants(id)"
business_area = "TEXT"
landmarks = "JSONB"
local_keywords = "JSONB"
competitor_analysis = "JSONB"
gmb_insights = "JSONB"
local_directories = "JSONB"

[payment_preferences]
; Track payment method preferences
tenant_id = "UUID REFERENCES tenants(id)"
customer_segment = "TEXT"
mpesa_percentage = "DECIMAL"
cash_percentage = "DECIMAL"
card_percentage = "DECIMAL"
credit_percentage = "DECIMAL"

[SECURITY_AND_COMPLIANCE]

[audit_logs]
; Track all system changes
id = "UUID PRIMARY KEY"
tenant_id = "UUID REFERENCES tenants(id)"
user_id = "TEXT"
action = "TEXT"
entity_type = "TEXT"
entity_id = "UUID"
old_values = "JSONB"
new_values = "JSONB"
ip_address = "INET"
user_agent = "TEXT"
created_at = "TIMESTAMP"

[data_retention_policies]
; Compliance with data regulations
tenant_id = "UUID REFERENCES tenants(id)"
data_type = "conversations|customers|analytics"
retention_days = "INTEGER"
deletion_strategy = "soft|hard|anonymize"
last_cleanup = "TIMESTAMP"

[SYSTEM_CONFIGURATION]

[feature_flags]
; Control feature rollout
feature_name = "TEXT PRIMARY KEY"
enabled_globally = "BOOLEAN"
enabled_tenants = "UUID[]"
rollout_percentage = "DECIMAL"
configuration = "JSONB"

[system_settings]
; Global platform settings
setting_key = "TEXT PRIMARY KEY"
setting_value = "JSONB"
description = "TEXT"
updated_at = "TIMESTAMP"
updated_by = "TEXT"

[rate_limits]
; API and AI rate limiting
tenant_id = "UUID REFERENCES tenants(id)"
resource_type = "api|ai_model|channel"
resource_name = "TEXT"
limit_per_minute = "INTEGER"
limit_per_hour = "INTEGER"
limit_per_day = "INTEGER"
current_usage = "JSONB"

[BUSINESS_INTELLIGENCE]

[revenue_tracking]
; Financial performance
tenant_id = "UUID REFERENCES tenants(id)"
date = "DATE"
subscription_revenue = "DECIMAL"
usage_revenue = "DECIMAL"
total_revenue = "DECIMAL"
payment_status = "pending|collected|overdue"
invoice_url = "TEXT"

[churn_prediction]
; Predict and prevent churn
tenant_id = "UUID REFERENCES tenants(id)"
churn_risk_score = "DECIMAL 0-1"
risk_factors = "JSONB"
last_activity = "TIMESTAMP"
engagement_trend = "increasing|stable|decreasing"
recommended_actions = "JSONB"

[growth_opportunities]
; Identify upsell opportunities
tenant_id = "UUID REFERENCES tenants(id)"
opportunity_type = "plan_upgrade|feature_addon|usage_increase"
potential_value = "DECIMAL"
confidence_score = "DECIMAL"
recommended_action = "TEXT"
identified_at = "TIMESTAMP"

[IMPLEMENTATION_PRIORITIES]
week_1_2 = "Core platform, multi-tenant, WhatsApp, Google APIs"
week_3_4 = "Marketing automation, content generation, social media"
week_5_6 = "AI integration, price negotiation, lead scoring"
week_7_8 = "Local SEO, lead generation, analytics"
week_9_10 = "Campaign builder, A/B testing, workflows"
week_11_12 = "Scale optimization, security, admin features"

[KEY_DESIGN_DECISIONS]
decision_1 = "Multi-tenant from day 1 - Each business is isolated"
decision_2 = "WhatsApp-first - Primary channel for Kenya"
decision_3 = "AI orchestration - Right model for right task"
decision_4 = "Marketing-first - Not just a chatbot"
decision_5 = "Industry-specific - Deep vertical features"
decision_6 = "Price negotiation - Cultural necessity"
decision_7 = "Free tier maximization - Use free APIs"
decision_8 = "Local optimization - Kenya-specific features"
decision_9 = "Real-time priority - Sub-second responses when needed"
decision_10 = "ROI focus - Track and prove value"

[SUCCESS_METRICS]
technical_uptime = "99.9%+"
response_time = "<500ms average, <1s for urgent"
ai_accuracy = "95%+ satisfaction"
conversation_success = "80%+ resolution"
business_mrr_growth = "30%+ monthly"
churn_rate = "<5% monthly"
customer_acquisition_cost = "<10,000 KSH"
ltv_cac_ratio = "3:1+"
leads_per_customer = "50+ monthly"
conversion_improvement = "2x+ baseline"
customer_roi = "10x+ platform cost"
nps_score = "50+"

[DEPLOYMENT_ARCHITECTURE]
frontend = "Vercel Edge Network"
backend = "Supabase (PostgreSQL + Realtime)"
ai_services = "Gemini, Groq, OpenAI APIs"
file_storage = "Supabase Storage / AWS S3"
cdn = "Cloudflare"
monitoring = "Vercel Analytics + Custom Dashboards"
error_tracking = "Sentry"
logs = "Supabase Logs + CloudWatch"

[DATA_FLOW_EXAMPLES]

[customer_acquisition_flow]
step_1 = "Google/Social post → Landing page visit"
step_2 = "Visitor data → Lead capture form"
step_3 = "Lead → AI qualification"
step_4 = "Qualified lead → Automated nurture sequence"
step_5 = "Engaged lead → AI conversation"
step_6 = "Price negotiation → Conversion"
step_7 = "New customer → Retention campaigns"

[ai_conversation_flow]
step_1 = "Message received → Channel webhook"
step_2 = "Router analyzes urgency and context"
step_3 = "Select AI model (Groq for urgent, Gemini default)"
step_4 = "Generate response with business context"
step_5 = "Send response → Track metrics"
step_6 = "Update conversation history"
step_7 = "Trigger follow-up if needed"

[content_generation_flow]
step_1 = "Schedule trigger or manual request"
step_2 = "Gemini analyzes business data and trends"
step_3 = "Generate platform-specific content"
step_4 = "Optional human approval"
step_5 = "Publish to channels"
step_6 = "Track engagement"
step_7 = "Learn and optimize"

[CONCLUSION]
This architecture represents a complete customer acquisition machine that finds, engages, nurtures, and converts customers automatically. Every design decision is optimized for the Kenyan market, from WhatsApp-first communication to AI-powered price negotiation. The platform is built to scale from 10 to 10,000 businesses while maintaining sub-second response times and 10x ROI for customers.